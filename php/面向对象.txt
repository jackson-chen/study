********************面向对象**************

【对象】
1. 对象在程序中是一种数据结构，用来表现某个事物 

2.对象可以表达万事万物，通过属性和方法来描述万事万物


【类】

1.类是对事物的归纳总结


2.对象和类的关系
对象     -> 归纳，总结（抽象）  -> 类

类       -> 具体实现（实例化）  -> 对象



【面向对象】

1. 面向对象的三大特性

封装：隐藏对象的内容细节，只保留有限的接口对外界提供访问窗口

继承：子类继承父类，拥有父类的特性

多态：多种状态，展现出不同的形态




*******************定义类***********

【定义类】
1.声明类

	abstract  class  className
	{
		[属性]
		[方法] 
	}

2. 属性初始化
	属性中的变量可以初始化，但是初始化的值必须是常数，常数指的是编译在编译阶段就可以得到值，而不需要运行才能得到值

	不初始化的属性默认值是null

3. 类的实例化

	class Dog
	{

	}

	$dog = new Dog();  //实例化


【属性、方法】
1. 使用->调用非静态属性和方法

2.$this伪变量，指的是当前正在使用的对象

3.对象赋值，变量存储的是对象标识符

4.对象默认是传递赋值


******************封装***********



【访问控制】
1. 可见性约束，public, protected ,private

2. __destruct

__destruct 是在对象所有的引用都被删除或者被显式销毁时执行


【静态】
1.静态属性和静态方法，不用实例化就可以调用	

2.通过类名::方法名, self::方法名，static::方法名来访问静态方法。属性同理



【常量】

使用const声明属性，常量的值必须是一个定值


【重载】
PHP所提供的重载是指动态的去创建类的属性和方法

当调用类中不存在或不访问的属性和方法，重载方法会被调用

【属性重载】
1.给不可访问的属性赋值， 调用__set()

2.读取不可访问的属性，调用__get()

3.对不可以访问的属性使用isset,empty,调用__isset	

4.对不可以访问的属性调用unset(),__unset()非被调用

【方法重载】

1.在对象中调用一个不存在的方法，__call会被调用

2.在类中调用一个不存在的静态方法，__callStatic会被调用



*******************继承***********

1.extends， 访问修饰符

2.重写父类的方法，parent访问父类中的方法和属性

3.final修饰类，修饰方法




*******************多态*******************

接口的多种不同的实现就是多态
同一个操作作用于不同的对象产生不同的结果


抽象类


接口


*******************多态*******************